import type { MappedTypeConfig } from "../../core/mapped-types/MappedTypeConfig.js";
import {
  CenteredOctahedronGenerator,
  CenteredIcosahedronGenerator,
  CenteredDodecahedronGenerator,
  CenteredCubeGenerator,
  CenteredMgonalPyramidalGenerator,
  CenteredMgonalPyramidGenerator,
  CenteredTruncatedCubeGenerator,
  CenteredTruncatedOctahedronGenerator,
  CenteredTruncatedTetrahedronGenerator,
  RhombicDodecahedralGenerator,
  HauyRhombicDodecahedralGenerator,
  CubicGenerator,
  DodecahedralGenerator,
  IcosahedralGenerator,
  MgonalPrismGenerator,
  OctahedralGenerator,
  PyramidalGenerator,
  StellaOctangulaGenerator,
  TetrahedralGenerator,
  TruncatedCubicGenerator,
  TruncatedOctahedralGenerator,
  TruncatedTetrahedralGenerator,
  PyramidalSpecificGenerator,
  CenteredMgonalPyramidSpecificGenerator,
  CenteredMgonalPyramidalSpecificGenerator,
  MgonalPrismSpecificGenerator,
} from "../strategies/index.js";

const baseStrategies = {
  pyramidal: new PyramidalGenerator(),
  mgonalPrism: new MgonalPrismGenerator(),
  centeredMgonalPyramidal: new CenteredMgonalPyramidalGenerator(), /// FFFFFFFFFF
  centeredMgonalPyramid: new CenteredMgonalPyramidGenerator(),
  centeredTruncatedCube: new CenteredTruncatedCubeGenerator(),
  centeredTruncatedTetrahedron: new CenteredTruncatedTetrahedronGenerator(),
  centeredTruncatedOctahedron: new CenteredTruncatedOctahedronGenerator(),
  cubic: new CubicGenerator(),
  tetrahedral: new TetrahedralGenerator(),
  octahedral: new OctahedralGenerator(),
  dodecahedral: new DodecahedralGenerator(),
  icosahedral: new IcosahedralGenerator(),
  stellaOctangula: new StellaOctangulaGenerator(),
  truncatedCubic: new TruncatedCubicGenerator(),
  truncatedTetrahedral: new TruncatedTetrahedralGenerator(),
  truncatedOctahedral: new TruncatedOctahedralGenerator(),
  rhombicDodecahedral: new RhombicDodecahedralGenerator(),
  hauyRhombicDodecahedral: new HauyRhombicDodecahedralGenerator(),
  centeredCube: new CenteredCubeGenerator(),
  centeredDodecahedron: new CenteredDodecahedronGenerator(),
  centeredIcosahedron: new CenteredIcosahedronGenerator(),
  centeredOctahedron: new CenteredOctahedronGenerator(),
};

const pyramidalSpecificStrategies = {
  triangularPyramidal: new PyramidalSpecificGenerator(3n),
  squarePyramidal: new PyramidalSpecificGenerator(4n),
  pentagonalPyramidal: new PyramidalSpecificGenerator(5n),
  hexagonalPyramidal: new PyramidalSpecificGenerator(6n),
  heptagonalPyramidal: new PyramidalSpecificGenerator(7n),
  octagonalPyramidal: new PyramidalSpecificGenerator(8n),
  nonagonalPyramidal: new PyramidalSpecificGenerator(9n),
  decagonalPyramidal: new PyramidalSpecificGenerator(10n),
  hendecagonalPyramidal: new PyramidalSpecificGenerator(11n),
  dodecagonalPyramidal: new PyramidalSpecificGenerator(12n),
  tridecagonalPyramidal: new PyramidalSpecificGenerator(13n),
  tetradecagonalPyramidal: new PyramidalSpecificGenerator(14n),
  pentadecagonalPyramidal: new PyramidalSpecificGenerator(15n),
  hexadecagonalPyramidal: new PyramidalSpecificGenerator(16n),
  heptadecagonalPyramidal: new PyramidalSpecificGenerator(17n),
  octadecagonalPyramidal: new PyramidalSpecificGenerator(18n),
  nonadecagonalPyramidal: new PyramidalSpecificGenerator(19n),
  icosagonalPyramidal: new PyramidalSpecificGenerator(20n),
  icosihenagonalPyramidal: new PyramidalSpecificGenerator(21n),
  icosidigonalPyramidal: new PyramidalSpecificGenerator(22n),
  icositrigonalPyramidal: new PyramidalSpecificGenerator(23n),
  icositetragonalPyramidal: new PyramidalSpecificGenerator(24n),
  icosipentagonalPyramidal: new PyramidalSpecificGenerator(25n),
  icosihexagonalPyramidal: new PyramidalSpecificGenerator(26n),
  icosiheptagonalPyramidal: new PyramidalSpecificGenerator(27n),
  icosioctagonalPyramidal: new PyramidalSpecificGenerator(28n),
  icosinonagonalPyramidal: new PyramidalSpecificGenerator(29n),
  triacontagonalPyramidal: new PyramidalSpecificGenerator(30n),
};

const centeredMgonalPyramidSpecificStrategies = {
  centeredPentagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(5n),
  centeredHexagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(6n),
  centeredHeptagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(7n),
  centeredOctagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(8n),
  centeredNonagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(9n),
  centeredDecagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(10n),
  centeredHendecagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(11n),
  centeredDodecagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(12n),
  centeredTridecagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(13n),
  centeredTetradecagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(14n),
  centeredPentadecagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(15n),
  centeredHexadecagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(16n),
  centeredHeptadecagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(17n),
  centeredOctadecagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(18n),
  centeredNonadecagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(19n),
  centeredIcosagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(20n),
  centeredIcosihenagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(21n),
  centeredIcosidigonalPyramid: new CenteredMgonalPyramidSpecificGenerator(22n),
  centeredIcositrigonalPyramid: new CenteredMgonalPyramidSpecificGenerator(23n),
  centeredIcositetragonalPyramid: new CenteredMgonalPyramidSpecificGenerator(24n),
  centeredIcosipentagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(25n),
  centeredIcosihexagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(26n),
  centeredIcosiheptagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(27n),
  centeredIcosioctagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(28n),
  centeredIcosinonagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(29n),
  centeredTriacontagonalPyramid: new CenteredMgonalPyramidSpecificGenerator(30n),
};

const centeredMgonalPyramidalSpecificStrategies = {
  centeredTriangularPyramidal: new CenteredMgonalPyramidalSpecificGenerator(3n),
  centeredSquarePyramidal: new CenteredMgonalPyramidalSpecificGenerator(4n),
  centeredPentagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(5n),
  centeredHexagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(6n),
  centeredHeptagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(7n),
  centeredOctagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(8n),
  centeredNonagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(9n),
  centeredDecagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(10n),
  centeredHendecagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(11n),
  centeredDodecagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(12n),
  centeredTridecagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(13n),
  centeredTetradecagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(14n),
  centeredPentadecagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(15n),
  centeredHexadecagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(16n),
  centeredHeptadecagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(17n),
  centeredOctadecagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(18n),
  centeredNonadecagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(19n),
  centeredIcosagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(20n),
  centeredIcosihenagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(21n),
  centeredIcosidigonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(22n),
  centeredIcositrigonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(23n),
  centeredIcositetragonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(24n),
  centeredIcosipentagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(25n),
  centeredIcosihexagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(26n),
  centeredIcosiheptagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(27n),
  centeredIcosioctagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(28n),
  centeredIcosinonagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(29n),
  centeredTriacontagonalPyramidal: new CenteredMgonalPyramidalSpecificGenerator(30n),
};

const mgonalPrismSpecificStrategies = {
  triangularPrism: new MgonalPrismSpecificGenerator(3n),
  squarePrism: new MgonalPrismSpecificGenerator(4n),
  pentagonalPrism: new MgonalPrismSpecificGenerator(5n),
  hexagonalPrism: new MgonalPrismSpecificGenerator(6n),
  heptagonalPrism: new MgonalPrismSpecificGenerator(7n),
  octagonalPrism: new MgonalPrismSpecificGenerator(8n),
  nonagonalPrism: new MgonalPrismSpecificGenerator(9n),
  decagonalPrism: new MgonalPrismSpecificGenerator(10n),
  hendecagonalPrism: new MgonalPrismSpecificGenerator(11n),
  dodecagonalPrism: new MgonalPrismSpecificGenerator(12n),
  tridecagonalPrism: new MgonalPrismSpecificGenerator(13n),
  tetradecagonalPrism: new MgonalPrismSpecificGenerator(14n),
  pentadecagonalPrism: new MgonalPrismSpecificGenerator(15n),
  hexadecagonalPrism: new MgonalPrismSpecificGenerator(16n),
  heptadecagonalPrism: new MgonalPrismSpecificGenerator(17n),
  octadecagonalPrism: new MgonalPrismSpecificGenerator(18n),
  nonadecagonalPrism: new MgonalPrismSpecificGenerator(19n),
  icosagonalPrism: new MgonalPrismSpecificGenerator(20n),
  icosihenagonalPrism: new MgonalPrismSpecificGenerator(21n),
  icosidigonalPrism: new MgonalPrismSpecificGenerator(22n),
  icositrigonalPrism: new MgonalPrismSpecificGenerator(23n),
  icositetragonalPrism: new MgonalPrismSpecificGenerator(24n),
  icosipentagonalPrism: new MgonalPrismSpecificGenerator(25n),
  icosihexagonalPrism: new MgonalPrismSpecificGenerator(26n),
  icosiheptagonalPrism: new MgonalPrismSpecificGenerator(27n),
  icosioctagonalPrism: new MgonalPrismSpecificGenerator(28n),
  icosinonagonalPrism: new MgonalPrismSpecificGenerator(29n),
  triacontagonalPrism: new MgonalPrismSpecificGenerator(30n),
};

export const SPACE_MAP_STRATEGY = {
  ...baseStrategies,
  ...pyramidalSpecificStrategies,
  ...centeredMgonalPyramidSpecificStrategies,
  ...centeredMgonalPyramidalSpecificStrategies,
  ...mgonalPrismSpecificStrategies,
} as const;

export type SpaceConfigMap = MappedTypeConfig<typeof SPACE_MAP_STRATEGY>;
